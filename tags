!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/samd-hoo/collab.cub3d/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
$(LIBFT)	Makefile	/^$(LIBFT):$/;"	t
$(MLXDIR)/libmlx.a	Makefile	/^$(MLXDIR)\/libmlx.a:$/;"	t
$(NAME)	Makefile	/^$(NAME): $(OBJ) $(LIBFT) $(MLXDIR)\/libmlx.a$/;"	t
$(NAME)	libft/Makefile	/^$(NAME): $(OBJS)$/;"	t
$(NAME)	mlxlib/Makefile.mk	/^$(NAME)	: $(OBJ)$/;"	t
$(NAME)	mlxlib/test/Makefile.mk	/^$(NAME): $(OBJ)$/;"	t
$(OBJ_DIR)/%.o	mlxlib/Makefile.mk	/^$(OBJ_DIR)\/%.o: %.c$/;"	t
%.o	Makefile	/^%.o: %.c$/;"	t
%.o	libft/Makefile	/^%.o: %.c$/;"	t
AR	libft/Makefile	/^AR		= ar rcs$/;"	m
AUTHOR	mlxlib/man/man1/mlx.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man1/mlx_loop.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man1/mlx_new_image.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man1/mlx_new_window.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man1/mlx_pixel_put.1	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man3/mlx.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man3/mlx_loop.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man3/mlx_new_image.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man3/mlx_new_window.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
AUTHOR	mlxlib/man/man3/mlx_pixel_put.3	/^.SH AUTHOR$/;"	s	title:MiniLibX
BLUE	Makefile	/^BLUE	= \\033[1;34m$/;"	m
BLUE	include/cubed.h	/^	BLUE = 2$/;"	e	enum:e_rgb
BLUE	libft/Makefile	/^BLUE	= \\033[1;34m$/;"	m
BUFFER_SIZE	libft/libft.h	/^# define BUFFER_SIZE /;"	d
CC	Makefile	/^CC		= cc$/;"	m
CC	libft/Makefile	/^CC		= cc$/;"	m
CC	mlxlib/Makefile.mk	/^	CC = clang$/;"	m
CC	mlxlib/Makefile.mk	/^CC	= gcc$/;"	m
CC	mlxlib/test/Makefile.mk	/^	CC	= gcc$/;"	m
CC	mlxlib/test/Makefile.mk	/^	CC = clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	= -Wall -Wextra -Werror -Iinclude -Ilibft -fsanitize=address -g $/;"	m
CFLAGS	libft/Makefile	/^CFLAGS	= -Wall -Wextra -Werror -Iinclude$/;"	m
CFLAGS	mlxlib/Makefile.mk	/^CFLAGS	= -O3 -I$(INC)$/;"	m
CFLAGS	mlxlib/test/Makefile.mk	/^CFLAGS= -I$(INC) -O3 -I.. -g$/;"	m
COLOR	mlxlib/man/man1/mlx_pixel_put.1	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
COLOR	mlxlib/man/man3/mlx_pixel_put.3	/^.SH COLOR MANAGEMENT$/;"	s	title:MiniLibX
CUBED_H	include/cubed.h	/^# define CUBED_H$/;"	d
DESCRIPTION	mlxlib/man/man1/mlx.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man1/mlx_loop.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man1/mlx_new_image.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man1/mlx_new_window.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man1/mlx_pixel_put.1	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man3/mlx.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man3/mlx_loop.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man3/mlx_new_image.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man3/mlx_new_window.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
DESCRIPTION	mlxlib/man/man3/mlx_pixel_put.3	/^.SH DESCRIPTION$/;"	s	title:MiniLibX
EAST	include/cubed.h	/^	EAST = 1,$/;"	e	enum:e_compas
ENV_DISPLAY	mlxlib/mlx_int.h	/^# define ENV_DISPLAY /;"	d
EOF	mlxlib/configure	/^cat <<EOF$/;"	h
ERROR	include/cubed.h	/^# define ERROR /;"	d
ERR_FILE	include/cubed.h	/^# define ERR_FILE /;"	d
ERR_FILE_CUB	include/cubed.h	/^# define ERR_FILE_CUB /;"	d
ERR_IMG	include/cubed.h	/^# define ERR_IMG /;"	d
ERR_INV_FILE	include/cubed.h	/^# define ERR_INV_FILE /;"	d
ERR_INV_LETTER	include/cubed.h	/^# define ERR_INV_LETTER /;"	d
ERR_INV_MAP	include/cubed.h	/^# define ERR_INV_MAP /;"	d
ERR_MAL	include/cubed.h	/^# define ERR_MAL /;"	d
ERR_MLX	include/cubed.h	/^# define ERR_MLX /;"	d
ERR_MORE_PLAYERS	include/cubed.h	/^# define ERR_MORE_PLAYERS /;"	d
ERR_NO_PLAYER	include/cubed.h	/^# define ERR_NO_PLAYER /;"	d
ERR_NO_TRUECOLOR	mlxlib/mlx_int.h	/^# define ERR_NO_TRUECOLOR /;"	d
ERR_POS_PLAYER	include/cubed.h	/^# define ERR_POS_PLAYER /;"	d
ERR_USE	include/cubed.h	/^# define ERR_USE /;"	d
ERR_WIN	include/cubed.h	/^# define ERR_WIN /;"	d
FT_PRINTF_H	libft/src/printf/ft_printf.h	/^# define FT_PRINTF_H$/;"	d
GOING	mlxlib/man/man1/mlx_loop.1	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GOING	mlxlib/man/man3/mlx_loop.3	/^.SH GOING FURTHER WITH EVENTS$/;"	s	title:MiniLibX
GREEN	Makefile	/^GREEN	= \\033[1;32m$/;"	m
GREEN	include/cubed.h	/^	GREEN = 1,$/;"	e	enum:e_rgb
GREEN	libft/Makefile	/^GREEN	= \\033[1;32m$/;"	m
HEIGHT	include/cubed.h	/^# define HEIGHT /;"	d
HEXLOW	libft/src/printf/ft_printf.h	/^# define HEXLOW /;"	d
HEXUPP	libft/src/printf/ft_printf.h	/^# define HEXUPP /;"	d
IM1_SX	mlxlib/test/main.c	/^#define	IM1_SX	/;"	d	file:
IM1_SY	mlxlib/test/main.c	/^#define	IM1_SY	/;"	d	file:
IM3_SX	mlxlib/test/main.c	/^#define	IM3_SX	/;"	d	file:
IM3_SY	mlxlib/test/main.c	/^#define	IM3_SY	/;"	d	file:
INC	mlxlib/Makefile.mk	/^INC	=%%%%$/;"	m
INC	mlxlib/test/Makefile.mk	/^INC=%%%%$/;"	m
INCLIB	mlxlib/test/Makefile.mk	/^INCLIB=$(INC)\/..\/lib$/;"	m
INCLUDE	mlxlib/man/man1/mlx.1	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
INCLUDE	mlxlib/man/man3/mlx.3	/^.SH INCLUDE FILE$/;"	s	title:MiniLibX
KEY_A	include/cubed.h	/^#  define KEY_A /;"	d
KEY_D	include/cubed.h	/^#  define KEY_D /;"	d
KEY_ESC	include/cubed.h	/^#  define KEY_ESC /;"	d
KEY_S	include/cubed.h	/^#  define KEY_S /;"	d
KEY_W	include/cubed.h	/^#  define KEY_W /;"	d
LFLAGS	mlxlib/test/Makefile.mk	/^LFLAGS = -L.. -lmlx -L$(INCLIB) -lXext -lX11 -lm$/;"	m
LIBFT	Makefile	/^LIBFT		= $(LIBFTDIR)\/libft.a$/;"	m
LIBFTDIR	Makefile	/^LIBFTDIR	= libft$/;"	m
LIBFT_H	libft/libft.h	/^# define LIBFT_H$/;"	d
LIBRARY	mlxlib/man/man1/mlx.1	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LIBRARY	mlxlib/man/man3/mlx.3	/^.SH LIBRARY FUNCTIONS$/;"	s	title:MiniLibX
LINKING	mlxlib/man/man1/mlx.1	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LINKING	mlxlib/man/man3/mlx.3	/^.SH LINKING MiniLibX$/;"	s	title:MiniLibX
LOCALHOST	mlxlib/mlx_int.h	/^# define LOCALHOST /;"	d
MLX	Makefile	/^MLX			= $(MLXDIR)\/libmlx.a$/;"	m
MLXDIR	Makefile	/^MLXDIR		= mlxlib$/;"	m
MLXFLAGS	Makefile	/^MLXFLAGS	= -framework OpenGL -framework AppKit$/;"	m
MLXFLAGS	Makefile	/^MLXFLAGS	= -lX11 -lXext -lm$/;"	m
MLX_H	mlxlib/mlx.h	/^#define	MLX_H$/;"	d
MLX_INT_H	mlxlib/mlx_int.h	/^# define MLX_INT_H$/;"	d
MLX_MAX_EVENT	mlxlib/mlx_int.h	/^# define MLX_MAX_EVENT /;"	d
MLX_TYPE_SHM	mlxlib/mlx_int.h	/^# define MLX_TYPE_SHM /;"	d
MLX_TYPE_SHM_PIXMAP	mlxlib/mlx_int.h	/^# define MLX_TYPE_SHM_PIXMAP /;"	d
MLX_TYPE_XIMAGE	mlxlib/mlx_int.h	/^# define MLX_TYPE_XIMAGE /;"	d
MOVE_SPEED	include/cubed.h	/^# define MOVE_SPEED /;"	d
M_PI	include/cubed.h	/^#  define M_PI /;"	d
MiniLibX	mlxlib/man/man1/mlx.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man1/mlx_loop.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man1/mlx_new_image.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man1/mlx_new_window.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man1/mlx_pixel_put.1	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man3/mlx.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man3/mlx_loop.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man3/mlx_new_image.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man3/mlx_new_window.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
MiniLibX	mlxlib/man/man3/mlx_pixel_put.3	/^.TH MiniLibX 3 "September 19, 2002"$/;"	t
NAME	Makefile	/^NAME	= cub3d$/;"	m
NAME	libft/Makefile	/^NAME	= libft.a$/;"	m
NAME	mlxlib/Makefile.mk	/^NAME		= libmlx.a$/;"	m
NAME	mlxlib/man/man1/mlx.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man1/mlx_loop.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man1/mlx_new_image.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man1/mlx_new_window.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man1/mlx_pixel_put.1	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man3/mlx.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man3/mlx_loop.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man3/mlx_new_image.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man3/mlx_new_window.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/man/man3/mlx_pixel_put.3	/^.SH NAME$/;"	s	title:MiniLibX
NAME	mlxlib/test/Makefile.mk	/^NAME= mlx-test$/;"	m
NAME_UNAME	mlxlib/Makefile.mk	/^NAME_UNAME	= libmlx_$(UNAME).a$/;"	m
NORTH	include/cubed.h	/^	NORTH = 0,$/;"	e	enum:e_compas
OBJ	Makefile	/^OBJ			= $(SRC:.c=.o)$/;"	m
OBJ	mlxlib/Makefile.mk	/^OBJ	= $(addprefix $(OBJ_DIR)\/,$(SRC:%.c=%.o))$/;"	m
OBJ	mlxlib/test/Makefile.mk	/^OBJ = $(SRC:%.c=%.o)$/;"	m
OBJS	libft/Makefile	/^OBJS := $(SRCS:.c=.o)$/;"	m
OBJ_DIR	mlxlib/Makefile.mk	/^OBJ_DIR = obj$/;"	m
PURPLE	Makefile	/^PURPLE	= \\033[1;35m$/;"	m
RED	Makefile	/^RED		= \\033[1;31m$/;"	m
RED	include/cubed.h	/^	RED = 0,$/;"	e	enum:e_rgb
RED	libft/Makefile	/^RED		= \\033[1;31m$/;"	m
RESET	Makefile	/^RESET	= \\033[0m$/;"	m
RESET	libft/Makefile	/^RESET	= \\033[0m$/;"	m
RETURN	mlxlib/man/man1/mlx.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/man/man1/mlx_new_image.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/man/man1/mlx_new_window.1	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/man/man3/mlx.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/man/man3/mlx_new_image.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/man/man3/mlx_new_window.3	/^.SH RETURN VALUES$/;"	s	title:MiniLibX
RETURN	mlxlib/mlx_xpm.c	/^#define	RETURN	/;"	d	file:
RM	libft/Makefile	/^RM		= rm -f$/;"	m
ROT_SPEED	include/cubed.h	/^# define ROT_SPEED /;"	d
SEE	mlxlib/man/man1/mlx.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man1/mlx_loop.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man1/mlx_new_image.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man1/mlx_new_window.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man1/mlx_pixel_put.1	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man3/mlx.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man3/mlx_loop.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man3/mlx_new_image.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man3/mlx_new_window.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SEE	mlxlib/man/man3/mlx_pixel_put.3	/^.SH SEE ALSO$/;"	s	title:MiniLibX
SOUTH	include/cubed.h	/^	SOUTH = 2,$/;"	e	enum:e_compas
SRC	Makefile	/^SRC			= $(SRCS_INIT) $(SRCS_MAIN) $(SRCS_CL_ER) $(SRCS_PROGRAM)$/;"	m
SRC	mlxlib/Makefile.mk	/^SRC	= mlx_init.c mlx_new_window.c mlx_pixel_put.c mlx_loop.c \\$/;"	m
SRC	mlxlib/test/Makefile.mk	/^SRC = main.c$/;"	m
SRCDIR	Makefile	/^SRCDIR		= srcs$/;"	m
SRCS	libft/Makefile	/^SRCS := $(SRC_ERROR) $(SRC_CHAR) $(SRC_STRING) $(SRC_MEMORY) $(SRC_CONV) \\$/;"	m
SRCS_CL_ER	Makefile	/^SRCS_CL_ER	= \\$/;"	m
SRCS_INIT	Makefile	/^SRCS_INIT 	= \\$/;"	m
SRCS_MAIN	Makefile	/^SRCS_MAIN 	= $(SRCDIR)\/main.c$/;"	m
SRCS_PROGRAM	Makefile	/^SRCS_PROGRAM = \\$/;"	m
SRC_ARR	libft/Makefile	/^SRC_ARR := \\$/;"	m
SRC_CHAR	libft/Makefile	/^SRC_CHAR := \\$/;"	m
SRC_CONV	libft/Makefile	/^SRC_CONV := \\$/;"	m
SRC_DIR	libft/Makefile	/^SRC_DIR	= src$/;"	m
SRC_ERROR	libft/Makefile	/^SRC_ERROR := \\$/;"	m
SRC_FD	libft/Makefile	/^SRC_FD := \\$/;"	m
SRC_GNL	libft/Makefile	/^SRC_GNL := \\$/;"	m
SRC_MEMORY	libft/Makefile	/^SRC_MEMORY := \\$/;"	m
SRC_PRINTF	libft/Makefile	/^SRC_PRINTF := \\$/;"	m
SRC_STRING	libft/Makefile	/^SRC_STRING := \\$/;"	m
STORING	mlxlib/man/man1/mlx_new_image.1	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
STORING	mlxlib/man/man3/mlx_new_image.3	/^.SH STORING COLOR INSIDE IMAGES$/;"	s	title:MiniLibX
SUCCESS	include/cubed.h	/^# define SUCCESS /;"	d
SYNOPSYS	mlxlib/man/man1/mlx.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man1/mlx_loop.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man1/mlx_new_image.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man1/mlx_new_window.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man1/mlx_pixel_put.1	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man3/mlx.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man3/mlx_loop.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man3/mlx_new_image.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man3/mlx_new_window.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
SYNOPSYS	mlxlib/man/man3/mlx_pixel_put.3	/^.SH SYNOPSYS$/;"	s	title:MiniLibX
TILE_SIZE	include/cubed.h	/^# define TILE_SIZE /;"	d
UNAME	Makefile	/^UNAME		= $(shell uname)$/;"	m
UNAME	mlxlib/Makefile.mk	/^UNAME = $(shell uname)$/;"	m
UNAME	mlxlib/test/Makefile.mk	/^UNAME := $(shell uname)$/;"	m
WARN_SHM_ATTACH	mlxlib/mlx_int.h	/^# define WARN_SHM_ATTACH /;"	d
WEST	include/cubed.h	/^	WEST = 3$/;"	e	enum:e_compas
WIDTH	include/cubed.h	/^# define WIDTH /;"	d
WIN1_SX	mlxlib/test/main.c	/^#define	WIN1_SX	/;"	d	file:
WIN1_SY	mlxlib/test/main.c	/^#define	WIN1_SY	/;"	d	file:
X-WINDOW	mlxlib/man/man1/mlx.1	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlxlib/man/man1/mlx_loop.1	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
X-WINDOW	mlxlib/man/man3/mlx.3	/^.SH X-WINDOW CONCEPT$/;"	s	title:MiniLibX
X-WINDOW	mlxlib/man/man3/mlx_loop.3	/^.SH X-WINDOW EVENTS$/;"	s	title:MiniLibX
XPM	mlxlib/man/man1/mlx_new_image.1	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
XPM	mlxlib/man/man3/mlx_new_image.3	/^.SH XPM IMAGES$/;"	s	title:MiniLibX
X_ShmAttach	mlxlib/mlx_new_image.c	/^#define	X_ShmAttach	/;"	d	file:
YELLOW	Makefile	/^YELLOW	= \\033[1;33m$/;"	m
YELLOW	libft/Makefile	/^YELLOW	= \\033[1;33m$/;"	m
adr	include/cubed.h	/^	char		*adr;$/;"	m	struct:s_mlx	typeref:typename:char *
adr	include/cubed.h	/^	char	*adr;$/;"	m	struct:s_tex	typeref:typename:char *
agency	libft/src/gnl/get_next_line.c	/^static char	*agency(int fd, char *line, char *buf)$/;"	f	typeref:typename:char *	file:
all	Makefile	/^all: banner $(NAME)$/;"	t
all	libft/Makefile	/^all: $(NAME)$/;"	t
all	mlxlib/Makefile	/^all	: do_configure$/;"	t
all	mlxlib/Makefile.mk	/^all	: $(NAME)$/;"	t
all	mlxlib/test/Makefile.mk	/^all: $(NAME)$/;"	t
angle	include/cubed.h	/^	float	angle;$/;"	m	struct:s_player	typeref:typename:float
angle	include/cubed.h	/^    float	angle;$/;"	m	struct:s_ray	typeref:typename:float
append_line	srcs/init/read_file.c	/^static char	*append_line(char *content, char *line)$/;"	f	typeref:typename:char *	file:
at_exit	mlxlib/test/run_tests.sh	/^at_exit() {$/;"	f
banner	Makefile	/^banner:$/;"	t
bpp	include/cubed.h	/^	int			bpp;$/;"	m	struct:s_mlx	typeref:typename:int
bpp	include/cubed.h	/^	int		bpp;$/;"	m	struct:s_tex	typeref:typename:int
bpp	mlxlib/mlx_int.h	/^	int				bpp;$/;"	m	struct:s_img	typeref:typename:int
bpp1	mlxlib/test/main.c	/^int	bpp1;$/;"	v	typeref:typename:int
bpp2	mlxlib/test/main.c	/^int	bpp2;$/;"	v	typeref:typename:int
bpp3	mlxlib/test/main.c	/^int	bpp3;$/;"	v	typeref:typename:int
bpp4	mlxlib/test/main.c	/^int	bpp4;$/;"	v	typeref:typename:int
c	include/cubed.h	/^	char	c;$/;"	m	struct:s_rect	typeref:typename:char
c	include/cubed.h	/^	int		c;$/;"	m	struct:s_player	typeref:typename:int
c_check	libft/src/arr/ft_split.c	/^int	c_check(char s, char c)$/;"	f	typeref:typename:int
c_dup	libft/src/arr/ft_split.c	/^char	*c_dup(char const *str, char c)$/;"	f	typeref:typename:char *
c_len	libft/src/arr/ft_split.c	/^int	c_len(char const *str, char c)$/;"	f	typeref:typename:int
can_move	srcs/program/player.c	/^int	can_move(t_cubed *cubed, float nx, float ny)$/;"	f	typeref:typename:int
check	mlxlib/Makefile.mk	/^check: all$/;"	t
check_header_complete	srcs/init/init_cubed.c	/^static int	check_header_complete(t_cubed *cubed)$/;"	f	typeref:typename:int	file:
check_surround	srcs/init/utils.c	/^int	check_surround(char **map, int y, int x, int h)$/;"	f	typeref:typename:int
clean	Makefile	/^clean: banner$/;"	t
clean	libft/Makefile	/^clean:$/;"	t
clean	mlxlib/Makefile	/^clean	:$/;"	t
clean	mlxlib/Makefile.mk	/^clean	:$/;"	t
clean	mlxlib/configure	/^clean(){$/;"	f
clean	mlxlib/test/Makefile.mk	/^clean:$/;"	t
close_window	srcs/program/keys.c	/^int	close_window(void *param)$/;"	f	typeref:typename:int
cmap	mlxlib/mlx_int.h	/^	Colormap	cmap;$/;"	m	struct:s_xvar	typeref:typename:Colormap
col	mlxlib/mlx_int.h	/^	int		col;$/;"	m	struct:s_xpm_col	typeref:typename:int
color	mlxlib/mlx_int.h	/^	int		color;$/;"	m	struct:s_col_name	typeref:typename:int
color_c	include/cubed.h	/^	int			color_c;$/;"	m	struct:s_data	typeref:typename:int
color_f	include/cubed.h	/^	int			color_f;$/;"	m	struct:s_data	typeref:typename:int
color_map_1	mlxlib/test/main.c	/^int	color_map_1(void *win,int w,int h)$/;"	f	typeref:typename:int
color_map_2	mlxlib/test/main.c	/^int	color_map_2(unsigned char *data,int bpp,int sl,int w,int h,int endian, int type)$/;"	f	typeref:typename:int
compas	include/cubed.h	/^    t_compas	compas;$/;"	m	struct:s_data	typeref:typename:t_compas
content	libft/libft.h	/^	long			content;$/;"	m	struct:s_list	typeref:typename:long
copy_and_find	srcs/init/parse_map.c	/^static int	copy_and_find(t_cubed *cubed, char **lines, int h)$/;"	f	typeref:typename:int	file:
cords_p	include/cubed.h	/^    int     	cords_p[2];$/;"	m	struct:s_data	typeref:typename:int[2]
data	include/cubed.h	/^	t_data		data;$/;"	m	struct:s_cubed	typeref:typename:t_data
data	mlxlib/mlx_int.h	/^	char			*data;$/;"	m	struct:s_img	typeref:typename:char *
data1	mlxlib/test/main.c	/^char	*data1;$/;"	v	typeref:typename:char *
data2	mlxlib/test/main.c	/^char	*data2;$/;"	v	typeref:typename:char *
data3	mlxlib/test/main.c	/^char	*data3;$/;"	v	typeref:typename:char *
data4	mlxlib/test/main.c	/^char	*data4;$/;"	v	typeref:typename:char *
decrgb	mlxlib/mlx_int.h	/^	int			decrgb[6];$/;"	m	struct:s_xvar	typeref:typename:int[6]
depth	mlxlib/mlx_int.h	/^	int			depth;$/;"	m	struct:s_xvar	typeref:typename:int
display	mlxlib/mlx_int.h	/^	Display		*display;$/;"	m	struct:s_xvar	typeref:typename:Display *
distance	include/cubed.h	/^    float	distance;$/;"	m	struct:s_ray	typeref:typename:float
divider	compiler.sh	/^divider() {$/;"	f
do_configure	mlxlib/Makefile	/^do_configure	:$/;"	t
do_flush	mlxlib/mlx_int.h	/^	int			do_flush;$/;"	m	struct:s_xvar	typeref:typename:int
draw_cell	srcs/program/draw.c	/^void	draw_cell(t_cubed *cubed, int x, int y, int size, int color)$/;"	f	typeref:typename:void
draw_minimap	srcs/program/draw.c	/^void	draw_minimap(t_cubed *cubed)$/;"	f	typeref:typename:void
draw_player	srcs/program/draw.c	/^void	draw_player(t_cubed *cubed, t_player p, int cell)\/\/ 2 RAYS TEKENEN MET BERSHINHAM ALGO - /;"	f	typeref:typename:void
draw_wall_line	srcs/program/process_main.c	/^void	draw_wall_line(t_cubed *cubed, int i, t_ray ray, t_tex tex)$/;"	f	typeref:typename:void
e_compas	include/cubed.h	/^typedef enum e_compas$/;"	g
e_rgb	include/cubed.h	/^typedef enum e_rgb$/;"	g
end_loop	mlxlib/mlx_int.h	/^	int 		end_loop;$/;"	m	struct:s_xvar	typeref:typename:int
endian	include/cubed.h	/^	int			endian;$/;"	m	struct:s_mlx	typeref:typename:int
endian	include/cubed.h	/^	int		endian;$/;"	m	struct:s_tex	typeref:typename:int
endian1	mlxlib/test/main.c	/^int	endian1;$/;"	v	typeref:typename:int
endian2	mlxlib/test/main.c	/^int	endian2;$/;"	v	typeref:typename:int
endian3	mlxlib/test/main.c	/^int	endian3;$/;"	v	typeref:typename:int
endian4	mlxlib/test/main.c	/^int	endian4;$/;"	v	typeref:typename:int
err_msg	srcs/clean_and_error/err_msg.c	/^void	err_msg(char *error)$/;"	f	typeref:typename:void
expose_hook	mlxlib/mlx_int.h	/^	int					(*expose_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
expose_param	mlxlib/mlx_int.h	/^	void				*expose_param;$/;"	m	struct:s_win_list	typeref:typename:void *
expose_win1	mlxlib/test/main.c	/^int	expose_win1(void *p)$/;"	f	typeref:typename:int
expose_win2	mlxlib/test/main.c	/^int	expose_win2(void *p)$/;"	f	typeref:typename:int
f_type	libft/src/printf/ft_fprintf.c	/^static int	f_type(char s, va_list va)$/;"	f	typeref:typename:int	file:
f_type	libft/src/printf/ft_printf.c	/^static int	f_type(char s, va_list va)$/;"	f	typeref:typename:int	file:
fclean	Makefile	/^fclean: banner$/;"	t
fclean	libft/Makefile	/^fclean: clean$/;"	t
first_last_ray	srcs/program/process_main.c	/^void	first_last_ray(t_cubed *cubed, int i, int rays)$/;"	f	typeref:typename:void
first_x	include/cubed.h	/^    int     first_x;$/;"	m	struct:s_minimap	typeref:typename:int
first_y	include/cubed.h	/^    int     first_y;$/;"	m	struct:s_minimap	typeref:typename:int
format	mlxlib/mlx_int.h	/^	int				format;$/;"	m	struct:s_img	typeref:typename:int
found	include/cubed.h	/^	int		found;$/;"	m	struct:s_tex	typeref:typename:int
fov	include/cubed.h	/^	float	fov;$/;"	m	struct:s_player	typeref:typename:float
free_all	srcs/clean_and_error/err_msg.c	/^void	free_all(t_cubed *cubed)$/;"	f	typeref:typename:void
free_mlx	srcs/clean_and_error/err_msg.c	/^void	free_mlx(t_cubed *cubed)$/;"	f	typeref:typename:void
free_static	libft/src/gnl/get_next_line.c	/^static void	free_static(char **s)$/;"	f	typeref:typename:void	file:
ft_afternl	libft/src/gnl/get_next_line.c	/^static char	*ft_afternl(char *s)$/;"	f	typeref:typename:char *	file:
ft_arrlen	libft/src/arr/ft_arrlen.c	/^int	ft_arrlen(char **arr)$/;"	f	typeref:typename:int
ft_atoi	libft/src/conv/ft_atoi.c	/^int	ft_atoi(const char *str)$/;"	f	typeref:typename:int
ft_atol	libft/src/conv/ft_atol.c	/^long	ft_atol(const char *str)$/;"	f	typeref:typename:long
ft_atoll	libft/src/conv/ft_atoll.c	/^long long	ft_atoll(const char *str)$/;"	f	typeref:typename:long long
ft_baselen	libft/src/printf/srcs/ft_puthex.c	/^static size_t	ft_baselen(const char *base)$/;"	f	typeref:typename:size_t	file:
ft_beforenl	libft/src/gnl/get_next_line.c	/^static char	*ft_beforenl(char *s)$/;"	f	typeref:typename:char *	file:
ft_bzero	libft/src/memory/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f	typeref:typename:void
ft_bzero	libft/src/printf/srcs/ft_functions.c	/^void	ft_bzero(void *str, size_t n)$/;"	f	typeref:typename:void
ft_calloc	libft/src/memory/ft_calloc.c	/^void	*ft_calloc(size_t nmeb, size_t size)$/;"	f	typeref:typename:void *
ft_calloc	libft/src/printf/srcs/ft_functions.c	/^void	*ft_calloc(size_t nmeb, size_t size)$/;"	f	typeref:typename:void *
ft_fprintf	libft/src/printf/ft_fprintf.c	/^int	ft_fprintf(const char *s, ...)$/;"	f	typeref:typename:int
ft_fputad_i	libft/src/printf/srcs/ft_fput.c	/^int	ft_fputad_i(void *pt)$/;"	f	typeref:typename:int
ft_fputbase	libft/src/printf/srcs/ft_fputhex.c	/^int	ft_fputbase(unsigned long x, char *base)$/;"	f	typeref:typename:int
ft_fputchar_i	libft/src/printf/srcs/ft_fput.c	/^int	ft_fputchar_i(char c)$/;"	f	typeref:typename:int
ft_fputnbr_i	libft/src/printf/srcs/ft_fput.c	/^int	ft_fputnbr_i(int num)$/;"	f	typeref:typename:int
ft_fputstr_i	libft/src/printf/srcs/ft_fput.c	/^int	ft_fputstr_i(char *str)$/;"	f	typeref:typename:int
ft_fputunbr_i	libft/src/printf/srcs/ft_fput.c	/^int	ft_fputunbr_i(unsigned int num)$/;"	f	typeref:typename:int
ft_freearr	libft/src/error/ft_freearr.c	/^void	ft_freearr(char **arr)$/;"	f	typeref:typename:void
ft_givebase	libft/src/printf/srcs/ft_puthex.c	/^char	*ft_givebase(unsigned long long x, char *base)$/;"	f	typeref:typename:char *
ft_isalnum	libft/src/char/ft_isalnum.c	/^int	ft_isalnum(char c)$/;"	f	typeref:typename:int
ft_isalpha	libft/src/char/ft_isalpha.c	/^int	ft_isalpha(char c)$/;"	f	typeref:typename:int
ft_isascii	libft/src/char/ft_isascii.c	/^int	ft_isascii(char c)$/;"	f	typeref:typename:int
ft_isdigit	libft/src/char/ft_isdigit.c	/^int	ft_isdigit(char c)$/;"	f	typeref:typename:int
ft_isprint	libft/src/char/ft_isprint.c	/^int	ft_isprint(char c)$/;"	f	typeref:typename:int
ft_isspace	libft/src/char/ft_isspace.c	/^int	ft_isspace(char c)$/;"	f	typeref:typename:int
ft_itoa	libft/src/conv/ft_itoa.c	/^char	*ft_itoa(int n)$/;"	f	typeref:typename:char *
ft_max	libft/src/char/ft_minmax.c	/^int	ft_max(int a, int b)$/;"	f	typeref:typename:int
ft_memchr	libft/src/memory/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_memcmp	libft/src/memory/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f	typeref:typename:int
ft_memcpy	libft/src/memory/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memmove	libft/src/memory/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f	typeref:typename:void *
ft_memset	libft/src/memory/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f	typeref:typename:void *
ft_min	libft/src/char/ft_minmax.c	/^int	ft_min(int a, int b)$/;"	f	typeref:typename:int
ft_numlen	libft/src/printf/srcs/ft_puthex.c	/^static int	ft_numlen(unsigned long long x, size_t blen)$/;"	f	typeref:typename:int	file:
ft_printf	libft/src/printf/ft_printf.c	/^int	ft_printf(const char *s, ...)$/;"	f	typeref:typename:int
ft_putad_i	libft/src/printf/srcs/ft_put.c	/^int	ft_putad_i(void *pt)$/;"	f	typeref:typename:int
ft_putbase	libft/src/printf/srcs/ft_puthex.c	/^int	ft_putbase(unsigned long x, char *base)$/;"	f	typeref:typename:int
ft_putchar_fd	libft/src/fd/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f	typeref:typename:void
ft_putchar_i	libft/src/printf/srcs/ft_put.c	/^int	ft_putchar_i(char c)$/;"	f	typeref:typename:int
ft_putendl_fd	libft/src/fd/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putnbr_fd	libft/src/fd/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f	typeref:typename:void
ft_putnbr_i	libft/src/printf/srcs/ft_put.c	/^int	ft_putnbr_i(int num)$/;"	f	typeref:typename:int
ft_putperror	libft/src/error/ft_putperror.c	/^void	ft_putperror(char *msg, int exit_code)$/;"	f	typeref:typename:void
ft_putstr_fd	libft/src/fd/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/;"	f	typeref:typename:void
ft_putstr_i	libft/src/printf/srcs/ft_put.c	/^int	ft_putstr_i(char *str)$/;"	f	typeref:typename:int
ft_putunbr_i	libft/src/printf/srcs/ft_put.c	/^int	ft_putunbr_i(unsigned int num)$/;"	f	typeref:typename:int
ft_split	libft/src/arr/ft_split.c	/^char	**ft_split(char const *s, char c)$/;"	f	typeref:typename:char **
ft_strchr	libft/src/string/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f	typeref:typename:char *
ft_strcmp	libft/src/string/ft_strcmp.c	/^int	ft_strcmp(const char *s1, const char *s2)$/;"	f	typeref:typename:int
ft_strdup	libft/src/string/ft_strdup.c	/^char	*ft_strdup(const char *s)$/;"	f	typeref:typename:char *
ft_strilen	libft/src/string/ft_strilen.c	/^size_t  ft_strilen(int *str)$/;"	f	typeref:typename:size_t
ft_striteri	libft/src/string/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char*))$/;"	f	typeref:typename:void
ft_strjoin	libft/src/string/ft_strjoin.c	/^char	*ft_strjoin(char *s1, char *s2)$/;"	f	typeref:typename:char *
ft_strlcat	libft/src/string/ft_strlcat.c	/^size_t	ft_strlcat(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlcpy	libft/src/string/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dest, const char *src, size_t size)$/;"	f	typeref:typename:size_t
ft_strlen	libft/src/string/ft_strlen.c	/^size_t	ft_strlen(char *str)$/;"	f	typeref:typename:size_t
ft_strmapi	libft/src/string/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f	typeref:typename:char *
ft_strncmp	libft/src/string/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f	typeref:typename:int
ft_strndup	libft/src/string/ft_strndup.c	/^char	*ft_strndup(const char *s, size_t n)$/;"	f	typeref:typename:char *
ft_strnstr	libft/src/string/ft_strnstr.c	/^char	*ft_strnstr(const char *big, const char *lil, size_t len)$/;"	f	typeref:typename:char *
ft_strrchr	libft/src/string/ft_strrchr.c	/^char	*ft_strrchr(char *s, int c)$/;"	f	typeref:typename:char *
ft_strsilen	libft/src/arr/ft_strsilen.c	/^size_t  ft_strsilen(int **str)$/;"	f	typeref:typename:size_t
ft_strslen	libft/src/arr/ft_strslen.c	/^int	ft_strslen(char **strs)$/;"	f	typeref:typename:int
ft_strtrim	libft/src/string/ft_strtrim.c	/^char	*ft_strtrim(char *s1, char trim_char)$/;"	f	typeref:typename:char *
ft_substr	libft/src/string/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start, size_t len)$/;"	f	typeref:typename:char *
ft_tolower	libft/src/char/ft_tolower.c	/^int	ft_tolower(int c)$/;"	f	typeref:typename:int
ft_toupper	libft/src/char/ft_toupper.c	/^int	ft_toupper(int c)$/;"	f	typeref:typename:int
gc	mlxlib/mlx_int.h	/^	GC					gc;$/;"	m	struct:s_win_list	typeref:typename:GC
gc	mlxlib/mlx_int.h	/^	GC				gc;$/;"	m	struct:s_img	typeref:typename:GC
gere_mouse	mlxlib/test/new_win.c	/^int gere_mouse(int x,int y,int button,void*toto)$/;"	f	typeref:typename:int
get_cell_size	srcs/program/utils.c	/^int	get_cell_size(t_cubed *cubed, int *w, int *h)$/;"	f	typeref:typename:int
get_line_width	srcs/init/parse_map.c	/^static int	get_line_width(char *line)$/;"	f	typeref:typename:int	file:
get_map_size	srcs/init/parse_map.c	/^static void	get_map_size(char **lines, int *h, int *w)$/;"	f	typeref:typename:void	file:
get_map_width	srcs/program/utils.c	/^int	get_map_width(char **map)$/;"	f	typeref:typename:int
get_next_line	libft/src/gnl/get_next_line.c	/^char	*get_next_line(int fd)$/;"	f	typeref:typename:char *
get_num_len	libft/src/conv/ft_itoa.c	/^int	get_num_len(int n)$/;"	f	typeref:typename:int
get_time_ms	srcs/program/utils.c	/^long	get_time_ms(void)$/;"	f	typeref:typename:long
get_xlib_include_path	mlxlib/configure	/^get_xlib_include_path(){$/;"	f
h	include/cubed.h	/^	float	h;$/;"	m	struct:s_rect	typeref:typename:float
height	include/cubed.h	/^	int		height;$/;"	m	struct:s_tex	typeref:typename:int
height	include/cubed.h	/^    int     height;$/;"	m	struct:s_minimap	typeref:typename:int
height	mlxlib/mlx_int.h	/^	int				height;$/;"	m	struct:s_img	typeref:typename:int
hit_x	include/cubed.h	/^    int		hit_x;$/;"	m	struct:s_ray	typeref:typename:int
hit_y	include/cubed.h	/^    int		hit_y;$/;"	m	struct:s_ray	typeref:typename:int
hook	mlxlib/mlx_int.h	/^	int		(*hook)();$/;"	m	struct:s_event_list	typeref:typename:int (*)()
hooks	mlxlib/mlx_int.h	/^	t_event_list		hooks[MLX_MAX_EVENT];$/;"	m	struct:s_win_list	typeref:typename:t_event_list[]
im1	mlxlib/test/main.c	/^void    *im1;$/;"	v	typeref:typename:void *
im2	mlxlib/test/main.c	/^void	*im2;$/;"	v	typeref:typename:void *
im3	mlxlib/test/main.c	/^void	*im3;$/;"	v	typeref:typename:void *
im4	mlxlib/test/main.c	/^void	*im4;$/;"	v	typeref:typename:void *
image	mlxlib/mlx_int.h	/^	XImage			*image;$/;"	m	struct:s_img	typeref:typename:XImage *
img	include/cubed.h	/^	void		*img;$/;"	m	struct:s_mlx	typeref:typename:void *
img	include/cubed.h	/^	void	*img;$/;"	m	struct:s_tex	typeref:typename:void *
index	libft/libft.h	/^	int				index;$/;"	m	struct:s_list	typeref:typename:int
init	srcs/init/utils.c	/^void	init(t_cubed *cubed)$/;"	f	typeref:typename:void
init_cubed	srcs/init/init_cubed.c	/^int	init_cubed(t_cubed *cubed, char *file)$/;"	f	typeref:typename:int
init_lines	srcs/init/init_cubed.c	/^static int	init_lines(char *file, char ***lines)$/;"	f	typeref:typename:int	file:
init_loops	srcs/init/utils.c	/^void	init_loops(t_cubed *cubed)$/;"	f	typeref:typename:void
init_mlx_struct	srcs/init/init_cubed.c	/^int	init_mlx_struct(t_cubed *cubed)$/;"	f	typeref:typename:int
init_player	srcs/init/utils.c	/^void	init_player(t_cubed *cubed)$/;"	f	typeref:typename:void
is_in	srcs/program/player.c	/^int	is_in(float x, float y, t_player p)$/;"	f	typeref:typename:int
is_player	srcs/init/utils.c	/^int	is_player(char c)$/;"	f	typeref:typename:int
is_trimmed	libft/src/string/ft_strtrim.c	/^int	is_trimmed(char c, char *set)$/;"	f	typeref:typename:int
key_hook	mlxlib/mlx_int.h	/^	int					(*key_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
key_param	mlxlib/mlx_int.h	/^	void				*key_param;$/;"	m	struct:s_win_list	typeref:typename:void *
key_press	srcs/program/keys.c	/^int	key_press(int key, t_cubed *cubed)$/;"	f	typeref:typename:int
key_release	srcs/program/keys.c	/^int	key_release(int key, t_cubed *cubed)$/;"	f	typeref:typename:int
key_win1	mlxlib/test/main.c	/^int	key_win1(int key,void *p)$/;"	f	typeref:typename:int
key_win2	mlxlib/test/main.c	/^int	key_win2(int key,void *p)$/;"	f	typeref:typename:int
key_win3	mlxlib/test/main.c	/^int	key_win3(int key,void *p)$/;"	f	typeref:typename:int
keys	include/cubed.h	/^	int			keys[300];$/;"	m	struct:s_cubed	typeref:typename:int[300]
last_time	include/cubed.h	/^	long		last_time;$/;"	m	struct:s_cubed	typeref:typename:long
last_x	include/cubed.h	/^    int     last_x;$/;"	m	struct:s_minimap	typeref:typename:int
last_y	include/cubed.h	/^    int     last_y;$/;"	m	struct:s_minimap	typeref:typename:int
load_texture	srcs/init/color.c	/^void	load_texture(t_cubed *cubed, t_compas dir, char *path)$/;"	f	typeref:typename:void
local_endian	mlxlib/test/main.c	/^int	local_endian;$/;"	v	typeref:typename:int
log_error	mlxlib/configure	/^log_error(){$/;"	f
log_error	mlxlib/test/run_tests.sh	/^log_error(){$/;"	f
log_info	mlxlib/configure	/^log_info(){$/;"	f
log_info	mlxlib/test/run_tests.sh	/^log_info(){$/;"	f
logging	mlxlib/configure	/^logging(){$/;"	f
logging	mlxlib/test/run_tests.sh	/^logging(){$/;"	f
loop_hook	mlxlib/mlx_int.h	/^	int			(*loop_hook)();$/;"	m	struct:s_xvar	typeref:typename:int (*)()
loop_param	mlxlib/mlx_int.h	/^	void		*loop_param;$/;"	m	struct:s_xvar	typeref:typename:void *
main	mlxlib/configure	/^main(){$/;"	f
main	mlxlib/test/main.c	/^int	main()$/;"	f	typeref:typename:int
main	mlxlib/test/new_win.c	/^int main()$/;"	f	typeref:typename:int
main	mlxlib/test/run_tests.sh	/^main(){$/;"	f
main	srcs/main.c	/^int	main(int ac, char **av)$/;"	f	typeref:typename:int
map	include/cubed.h	/^    char    	**map;$/;"	m	struct:s_data	typeref:typename:char **
mask	mlxlib/mlx_int.h	/^	int		mask;$/;"	m	struct:s_event_list	typeref:typename:int
minimap	include/cubed.h	/^    t_minimap	minimap;$/;"	m	struct:s_cubed	typeref:typename:t_minimap
mlx	include/cubed.h	/^	t_mlx		mlx;$/;"	m	struct:s_cubed	typeref:typename:t_mlx
mlx	include/cubed.h	/^	void		*mlx;$/;"	m	struct:s_mlx	typeref:typename:void *
mlx	mlxlib/test/main.c	/^void	*mlx;$/;"	v	typeref:typename:void *
mlx	mlxlib/test/new_win.c	/^void *mlx;$/;"	v	typeref:typename:void *
mlx_X_error	mlxlib/mlx_new_image.c	/^int	mlx_X_error;$/;"	v	typeref:typename:int
mlx_clear_window	mlxlib/mlx_clear_window.c	/^int		mlx_clear_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_col_name	mlxlib/mlx_rgb.c	/^struct s_col_name mlx_col_name[] =$/;"	v	typeref:struct:s_col_name[]
mlx_destroy_display	mlxlib/mlx_destroy_display.c	/^int	mlx_destroy_display(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_destroy_image	mlxlib/mlx_destroy_image.c	/^int	mlx_destroy_image(t_xvar *xvar, t_img *img)$/;"	f	typeref:typename:int
mlx_destroy_window	mlxlib/mlx_destroy_window.c	/^int	mlx_destroy_window(t_xvar *xvar,t_win_list *win)$/;"	f	typeref:typename:int
mlx_do_key_autorepeatoff	mlxlib/mlx_hook.c	/^int	mlx_do_key_autorepeatoff(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_key_autorepeaton	mlxlib/mlx_hook.c	/^int	mlx_do_key_autorepeaton(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_do_sync	mlxlib/mlx_hook.c	/^int	mlx_do_sync(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_expose_hook	mlxlib/mlx_expose_hook.c	/^int		mlx_expose_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_ext_fullscreen	mlxlib/mlx_ext_randr.c	/^int			mlx_ext_fullscreen(t_xvar *xvar, t_win_list *win, int fullscreen)$/;"	f	typeref:typename:int
mlx_flush_event	mlxlib/mlx_flush_event.c	/^int	mlx_flush_event(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_get_color_value	mlxlib/mlx_get_color_value.c	/^int             mlx_get_color_value(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_get_data_addr	mlxlib/mlx_get_data_addr.c	/^char	*mlx_get_data_addr(t_img *img,int *bits_per_pixel,$/;"	f	typeref:typename:char *
mlx_get_screen_size	mlxlib/mlx_screen_size.c	/^int		mlx_get_screen_size(void *mlx_ptr, int *sizex, int *sizey)$/;"	f	typeref:typename:int
mlx_hook	mlxlib/mlx_hook.c	/^int	mlx_hook(t_win_list *win, int x_event, int x_mask, $/;"	f	typeref:typename:int
mlx_init	mlxlib/mlx_init.c	/^void	*mlx_init()$/;"	f	typeref:typename:void *
mlx_int_anti_resize_win	mlxlib/mlx_int_anti_resize_win.c	/^int	mlx_int_anti_resize_win(t_xvar *xvar,Window win,int w,int h)$/;"	f	typeref:typename:int
mlx_int_deal_shm	mlxlib/mlx_init.c	/^int		mlx_int_deal_shm(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_do_nothing	mlxlib/mlx_int_do_nothing.c	/^int	mlx_int_do_nothing(void *param)$/;"	f	typeref:typename:int
mlx_int_egal_img	mlxlib/mlx_lib_xpm.c	/^int	mlx_int_egal_img(XImage *img1,XImage *img2)$/;"	f	typeref:typename:int
mlx_int_file_get_rid_comment	mlxlib/mlx_xpm.c	/^int	mlx_int_file_get_rid_comment(char *ptr, int size)$/;"	f	typeref:typename:int
mlx_int_get_col_name	mlxlib/mlx_xpm.c	/^int	mlx_int_get_col_name(char *str,int size)$/;"	f	typeref:typename:int
mlx_int_get_good_color	mlxlib/mlx_get_color_value.c	/^int		mlx_int_get_good_color(t_xvar *xvar,int color)$/;"	f	typeref:typename:int
mlx_int_get_line	mlxlib/mlx_xpm.c	/^char	*mlx_int_get_line(char *ptr,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_get_text_rgb	mlxlib/mlx_xpm.c	/^int	mlx_int_get_text_rgb(char *name, char *end)$/;"	f	typeref:typename:int
mlx_int_get_visual	mlxlib/mlx_int_get_visual.c	/^int		mlx_int_get_visual(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_new_image	mlxlib/mlx_new_image.c	/^void	*mlx_int_new_image(t_xvar *xvar,int width, int height,int format)$/;"	f	typeref:typename:void *
mlx_int_new_xshm_image	mlxlib/mlx_new_image.c	/^void	*mlx_int_new_xshm_image(t_xvar *xvar,int width,int height,int format)$/;"	f	typeref:typename:void *
mlx_int_param_ButtonPress	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_ButtonPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_ButtonRelease	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_ButtonRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_Expose	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_Expose(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyPress	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_KeyPress(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_KeyRelease	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_KeyRelease(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_MotionNotify	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_MotionNotify(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_event	mlxlib/mlx_int_param_event.c	/^int	(*(mlx_int_param_event[]))() =$/;"	v	typeref:typename:int (* ([]))()
mlx_int_param_generic	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_generic(t_xvar *xvar, XEvent *ev, t_win_list *win)$/;"	f	typeref:typename:int
mlx_int_param_undef	mlxlib/mlx_int_param_event.c	/^int	mlx_int_param_undef()$/;"	f	typeref:typename:int
mlx_int_parse_xpm	mlxlib/mlx_xpm.c	/^void	*mlx_int_parse_xpm(t_xvar *xvar,void *info,int info_size,char *(*f)())$/;"	f	typeref:typename:void *
mlx_int_rgb_conversion	mlxlib/mlx_init.c	/^int		mlx_int_rgb_conversion(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_set_win_event_mask	mlxlib/mlx_int_set_win_event_mask.c	/^int	mlx_int_set_win_event_mask(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_int_static_line	mlxlib/mlx_xpm.c	/^char	*mlx_int_static_line(char **xpm_data,int *pos,int size)$/;"	f	typeref:typename:char *
mlx_int_str_str	mlxlib/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_str_cote	mlxlib/mlx_int_str_to_wordtab.c	/^int	mlx_int_str_str_cote(char *str,char *find,int len)$/;"	f	typeref:typename:int
mlx_int_str_to_wordtab	mlxlib/mlx_int_str_to_wordtab.c	/^char	**mlx_int_str_to_wordtab(char *str)$/;"	f	typeref:typename:char **
mlx_int_wait_first_expose	mlxlib/mlx_int_wait_first_expose.c	/^int	mlx_int_wait_first_expose(t_xvar *xvar,Window win)$/;"	f	typeref:typename:int
mlx_int_xpm_f_image	mlxlib/mlx_lib_xpm.c	/^void		*mlx_int_xpm_f_image(t_xvar *xvar,int *width,int *height,$/;"	f	typeref:typename:void *
mlx_int_xpm_set_pixel	mlxlib/mlx_xpm.c	/^int	mlx_int_xpm_set_pixel(t_img *img, char *data, int opp, int col, int x)$/;"	f	typeref:typename:int
mlx_key_hook	mlxlib/mlx_key_hook.c	/^int		mlx_key_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_loop	mlxlib/mlx_loop.c	/^int			mlx_loop(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_end	mlxlib/mlx_loop.c	/^int			mlx_loop_end(t_xvar *xvar)$/;"	f	typeref:typename:int
mlx_loop_hook	mlxlib/mlx_loop_hook.c	/^int	mlx_loop_hook(t_xvar *xvar,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_get_pos	mlxlib/mlx_mouse.c	/^int		mlx_mouse_get_pos(t_xvar *xvar, t_win_list *win, \\$/;"	f	typeref:typename:int
mlx_mouse_hide	mlxlib/mlx_mouse.c	/^int		mlx_mouse_hide(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_mouse_hook	mlxlib/mlx_mouse_hook.c	/^int		mlx_mouse_hook(t_win_list *win,int (*funct)(),void *param)$/;"	f	typeref:typename:int
mlx_mouse_move	mlxlib/mlx_mouse.c	/^int		mlx_mouse_move(t_xvar *xvar, t_win_list *win, int x, int y)$/;"	f	typeref:typename:int
mlx_mouse_show	mlxlib/mlx_mouse.c	/^int		mlx_mouse_show(t_xvar *xvar, t_win_list *win)$/;"	f	typeref:typename:int
mlx_new_image	mlxlib/mlx_new_image.c	/^void	*mlx_new_image(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_image2	mlxlib/mlx_new_image.c	/^void	*mlx_new_image2(t_xvar *xvar,int width, int height)$/;"	f	typeref:typename:void *
mlx_new_window	mlxlib/mlx_new_window.c	/^void	*mlx_new_window(t_xvar *xvar,int size_x,int size_y,char *title)$/;"	f	typeref:typename:void *
mlx_pixel_put	mlxlib/mlx_pixel_put.c	/^int		mlx_pixel_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_put_image_to_window	mlxlib/mlx_put_image_to_window.c	/^int	mlx_put_image_to_window(t_xvar *xvar,t_win_list *win,t_img *img,$/;"	f	typeref:typename:int
mlx_set_font	mlxlib/mlx_set_font.c	/^void	mlx_set_font(t_xvar *xvar, t_win_list *win, char *name)$/;"	f	typeref:typename:void
mlx_string_put	mlxlib/mlx_string_put.c	/^int		mlx_string_put(t_xvar *xvar,t_win_list *win,$/;"	f	typeref:typename:int
mlx_xpm_file_to_image	mlxlib/mlx_lib_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *filename,$/;"	f	typeref:typename:void *
mlx_xpm_file_to_image	mlxlib/mlx_xpm.c	/^void	*mlx_xpm_file_to_image(t_xvar *xvar,char *file,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlxlib/mlx_lib_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **data,int *width,int *height)$/;"	f	typeref:typename:void *
mlx_xpm_to_image	mlxlib/mlx_xpm.c	/^void	*mlx_xpm_to_image(t_xvar *xvar,char **xpm_data,int *width,int *height)$/;"	f	typeref:typename:void *
mouse_hook	mlxlib/mlx_int.h	/^	int					(*mouse_hook)();$/;"	m	struct:s_win_list	typeref:typename:int (*)()
mouse_param	mlxlib/mlx_int.h	/^	void				*mouse_param;$/;"	m	struct:s_win_list	typeref:typename:void *
mouse_win1	mlxlib/test/main.c	/^int	mouse_win1(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win2	mlxlib/test/main.c	/^int	mouse_win2(int button,int x,int y, void *p)$/;"	f	typeref:typename:int
mouse_win3	mlxlib/test/main.c	/^int	mouse_win3(int x,int y, void *p)$/;"	f	typeref:typename:int
my_mlx_pixel_put	srcs/program/utils.c	/^void	my_mlx_pixel_put(t_cubed *cubed, int x, int y, int color)$/;"	f	typeref:typename:void
name	mlxlib/mlx_int.h	/^	char	*name;$/;"	m	struct:s_col_name	typeref:typename:char *
name	mlxlib/mlx_int.h	/^	int		name;$/;"	m	struct:s_xpm_col	typeref:typename:int
next	libft/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list *
next	mlxlib/mlx_int.h	/^	struct s_win_list	*next;$/;"	m	struct:s_win_list	typeref:struct:s_win_list *
p	include/cubed.h	/^	t_player	p;$/;"	m	struct:s_cubed	typeref:typename:t_player
param	mlxlib/mlx_int.h	/^	void	*param;$/;"	m	struct:s_event_list	typeref:typename:void *
parse_args	mlxlib/configure	/^parse_args(){$/;"	f
parse_file	srcs/init/init_cubed.c	/^int	parse_file(t_cubed *cubed, char **lines)$/;"	f	typeref:typename:int
parse_header_line	srcs/init/color.c	/^int parse_header_line(t_cubed *cubed, char *line)$/;"	f	typeref:typename:int
parse_map	srcs/init/parse_map.c	/^int	parse_map(t_cubed *cubed, char **lines)$/;"	f	typeref:typename:int
parse_rgb	srcs/init/color.c	/^int	parse_rgb(char *s)$/;"	f	typeref:typename:int
pix	mlxlib/mlx_int.h	/^	Pixmap			pix;$/;"	m	struct:s_img	typeref:typename:Pixmap
private_cmap	mlxlib/mlx_int.h	/^	int			private_cmap;$/;"	m	struct:s_xvar	typeref:typename:int
process	srcs/program/process_main.c	/^int	process(t_cubed *cubed)$/;"	f	typeref:typename:int
pshm_format	mlxlib/mlx_int.h	/^	int			pshm_format;$/;"	m	struct:s_xvar	typeref:typename:int
r	include/cubed.h	/^	float	r;$/;"	m	struct:s_player	typeref:typename:float
ray	include/cubed.h	/^	t_ray		ray;$/;"	m	struct:s_cubed	typeref:typename:t_ray
re	Makefile	/^re: banner fclean all/;"	t
re	libft/Makefile	/^re: fclean all/;"	t
re	mlxlib/Makefile	/^re	: clean all$/;"	t
re	mlxlib/test/Makefile.mk	/^re: clean all$/;"	t
read_file	srcs/init/read_file.c	/^char	*read_file(const char *file)$/;"	f	typeref:typename:char *
render_next_frame	srcs/program/process_main.c	/^int	render_next_frame(t_cubed *cubed)$/;"	f	typeref:typename:int
reset_background	srcs/program/draw.c	/^void	reset_background(t_cubed *cubed)$/;"	f	typeref:typename:void
root	mlxlib/mlx_int.h	/^	Window		root;$/;"	m	struct:s_xvar	typeref:typename:Window
s_col_name	mlxlib/mlx_int.h	/^struct	s_col_name$/;"	s
s_cubed	include/cubed.h	/^typedef struct s_cubed$/;"	s
s_data	include/cubed.h	/^typedef struct s_data$/;"	s
s_event_list	mlxlib/mlx_int.h	/^typedef struct	s_event_list$/;"	s
s_img	mlxlib/mlx_int.h	/^typedef struct	s_img$/;"	s
s_list	libft/libft.h	/^typedef struct s_list$/;"	s
s_minimap	include/cubed.h	/^typedef struct s_minimap$/;"	s
s_mlx	include/cubed.h	/^typedef struct s_mlx$/;"	s
s_player	include/cubed.h	/^typedef struct s_player$/;"	s
s_ray	include/cubed.h	/^typedef struct s_ray$/;"	s
s_rect	include/cubed.h	/^typedef struct	s_rect$/;"	s
s_tex	include/cubed.h	/^typedef struct s_tex$/;"	s
s_win_list	mlxlib/mlx_int.h	/^typedef struct	s_win_list$/;"	s
s_xpm_col	mlxlib/mlx_int.h	/^typedef	struct	s_xpm_col$/;"	s
s_xvar	mlxlib/mlx_int.h	/^typedef struct	s_xvar$/;"	s
saved_mode	mlxlib/mlx_ext_randr.c	/^RRMode	saved_mode = 0;$/;"	v	typeref:typename:RRMode
scale	include/cubed.h	/^    int     scale;$/;"	m	struct:s_minimap	typeref:typename:int
screen	mlxlib/mlx_int.h	/^	int			screen;$/;"	m	struct:s_xvar	typeref:typename:int
set_player	srcs/init/parse_map.c	/^static int	set_player(t_cubed *cubed, char c, int x, int y, int *found)$/;"	f	typeref:typename:int	file:
shm	mlxlib/mlx_int.h	/^	XShmSegmentInfo	shm;$/;"	m	struct:s_img	typeref:typename:XShmSegmentInfo
shm_att_pb	mlxlib/mlx_new_image.c	/^int	shm_att_pb(Display *d,XErrorEvent *ev)$/;"	f	typeref:typename:int
show	mlxlib/Makefile.mk	/^show:$/;"	t
show	mlxlib/test/Makefile.mk	/^show:$/;"	t
show_help	mlxlib/configure	/^show_help(){$/;"	f
side	include/cubed.h	/^	int		side;$/;"	m	struct:s_ray	typeref:typename:int
sigint_handler	mlxlib/test/run_tests.sh	/^sigint_handler(){$/;"	f
size_line	include/cubed.h	/^	int			size_line;$/;"	m	struct:s_mlx	typeref:typename:int
size_line	include/cubed.h	/^	int		size_line;$/;"	m	struct:s_tex	typeref:typename:int
size_line	mlxlib/mlx_int.h	/^	int				size_line;$/;"	m	struct:s_img	typeref:typename:int
sl1	mlxlib/test/main.c	/^int	sl1;$/;"	v	typeref:typename:int
sl2	mlxlib/test/main.c	/^int	sl2;$/;"	v	typeref:typename:int
sl3	mlxlib/test/main.c	/^int	sl3;$/;"	v	typeref:typename:int
sl4	mlxlib/test/main.c	/^int	sl4;$/;"	v	typeref:typename:int
strlcpy_is_not_posix	mlxlib/mlx_xpm.c	/^unsigned int	strlcpy_is_not_posix(char *dest, char *src, unsigned int size)$/;"	f	typeref:typename:unsigned int
t_compas	include/cubed.h	/^}	t_compas;$/;"	t	typeref:enum:e_compas
t_cubed	include/cubed.h	/^}   t_cubed;$/;"	t	typeref:struct:s_cubed
t_data	include/cubed.h	/^}	t_data;$/;"	t	typeref:struct:s_data
t_event_list	mlxlib/mlx_int.h	/^}				t_event_list;$/;"	t	typeref:struct:s_event_list
t_img	mlxlib/mlx_int.h	/^}				t_img;$/;"	t	typeref:struct:s_img
t_list	libft/libft.h	/^}	t_list;$/;"	t	typeref:struct:s_list
t_minimap	include/cubed.h	/^}   t_minimap;$/;"	t	typeref:struct:s_minimap
t_mlx	include/cubed.h	/^}	t_mlx;$/;"	t	typeref:struct:s_mlx
t_player	include/cubed.h	/^}	t_player;$/;"	t	typeref:struct:s_player
t_ray	include/cubed.h	/^}   t_ray;$/;"	t	typeref:struct:s_ray
t_rect	include/cubed.h	/^} t_rect;$/;"	t	typeref:struct:s_rect
t_rgb	include/cubed.h	/^}	t_rgb;$/;"	t	typeref:enum:e_rgb
t_tex	include/cubed.h	/^}	t_tex;$/;"	t	typeref:struct:s_tex
t_win_list	mlxlib/mlx_int.h	/^}				t_win_list;$/;"	t	typeref:struct:s_win_list
t_xpm_col	mlxlib/mlx_int.h	/^}				t_xpm_col;$/;"	t	typeref:struct:s_xpm_col
t_xvar	mlxlib/mlx_int.h	/^}				t_xvar;$/;"	t	typeref:struct:s_xvar
test_default_main	mlxlib/test/run_tests.sh	/^test_default_main(){$/;"	f
texture	include/cubed.h	/^	t_tex		texture[4];$/;"	m	struct:s_cubed	typeref:typename:t_tex[4]
type	include/cubed.h	/^	char	type;$/;"	m	struct:s_rect	typeref:typename:char
type	mlxlib/mlx_int.h	/^	int				type;$/;"	m	struct:s_img	typeref:typename:int
update	compiler.sh	/^update() {$/;"	f
update_player	srcs/program/player.c	/^void	update_player(t_cubed *cubed)$/;"	f	typeref:typename:void
use_xshm	mlxlib/mlx_int.h	/^	int			use_xshm;$/;"	m	struct:s_xvar	typeref:typename:int
valid_filename	srcs/main.c	/^static int	valid_filename(char *filename)$/;"	f	typeref:typename:int	file:
validate_map	srcs/init/utils.c	/^int	validate_map(t_cubed *cubed, int h, int w)$/;"	f	typeref:typename:int
visual	mlxlib/mlx_int.h	/^	Visual		*visual;$/;"	m	struct:s_xvar	typeref:typename:Visual *
w	include/cubed.h	/^	float	w;$/;"	m	struct:s_rect	typeref:typename:float
wall_b	include/cubed.h	/^	double 	wall_b;$/;"	m	struct:s_ray	typeref:typename:double
wall_t	include/cubed.h	/^	double 	wall_t;$/;"	m	struct:s_ray	typeref:typename:double
wall_x	include/cubed.h	/^	int		wall_x;$/;"	m	struct:s_ray	typeref:typename:int
wall_y	include/cubed.h	/^	int		wall_y;$/;"	m	struct:s_ray	typeref:typename:int
width	include/cubed.h	/^	int		width;$/;"	m	struct:s_tex	typeref:typename:int
width	include/cubed.h	/^    int     width;$/;"	m	struct:s_minimap	typeref:typename:int
width	mlxlib/mlx_int.h	/^	int				width;$/;"	m	struct:s_img	typeref:typename:int
win	include/cubed.h	/^	void		*win;$/;"	m	struct:s_mlx	typeref:typename:void *
win1	mlxlib/test/main.c	/^void	*win1;$/;"	v	typeref:typename:void *
win1	mlxlib/test/new_win.c	/^void *win1;$/;"	v	typeref:typename:void *
win2	mlxlib/test/main.c	/^void    *win2;$/;"	v	typeref:typename:void *
win2	mlxlib/test/new_win.c	/^void *win2;$/;"	v	typeref:typename:void *
win3	mlxlib/test/main.c	/^void    *win3;$/;"	v	typeref:typename:void *
win_count	mlxlib/mlx_loop.c	/^static int	win_count(t_xvar *xvar)$/;"	f	typeref:typename:int	file:
win_list	mlxlib/mlx_int.h	/^	t_win_list	*win_list;$/;"	m	struct:s_xvar	typeref:typename:t_win_list *
window	mlxlib/mlx_int.h	/^	Window				window;$/;"	m	struct:s_win_list	typeref:typename:Window
wm_delete_window	mlxlib/mlx_int.h	/^	Atom		wm_delete_window;$/;"	m	struct:s_xvar	typeref:typename:Atom
wm_protocols	mlxlib/mlx_int.h	/^	Atom		wm_protocols;$/;"	m	struct:s_xvar	typeref:typename:Atom
x	include/cubed.h	/^	float	x;$/;"	m	struct:s_player	typeref:typename:float
x	include/cubed.h	/^	float	x;$/;"	m	struct:s_rect	typeref:typename:float
xpm1_x	mlxlib/test/main.c	/^int	xpm1_x;$/;"	v	typeref:typename:int
xpm1_y	mlxlib/test/main.c	/^int	xpm1_y;$/;"	v	typeref:typename:int
y	include/cubed.h	/^	float	y;$/;"	m	struct:s_player	typeref:typename:float
y	include/cubed.h	/^	float	y;$/;"	m	struct:s_rect	typeref:typename:float
